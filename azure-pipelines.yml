trigger:
  batch: true
  branches:
    include:
      - main
      - release/*

resources:
  repositories:
    - repository: niveristand-custom-device-build-tools
      type: github
      ref: main
      endpoint: ni (2)
      name: ni/niveristand-custom-device-build-tools

  pipelines:
    - pipeline: SlscEdsCustomDevice
      source: ni.niveristand-slsc-eds-custom-device
      trigger: true

pool:
  name: custom-device-temp # TEMPORARY, eventually use an official build pool of custom device agents
  demands:
    - agent.os -equals Windows_NT

# --------- Set Build Parameters ---------
parameters:
    # customDeviceRepoName - Name of the Custom Device Repository on GitHub
  - name:    customDeviceRepoName
    type:    string
    default: imitation-cd

    # lvVersions - each LabVIEW version, bitness, and release nomenclature combination to build
  - name:    lvVersions
    type:    object
    default:
      - version: '2020'
        bitness: '32-bit'
        releaseVersion: '20.0'
        quarterlyVersion: ''
      - version: '2021'
        bitness: '64-bit'
        releaseVersion: '21.0'
      - version: '2023'
        bitness: '64-bit'
        releaseVersion: '23.0'

    # dependencies - source location, file, and copy destination
  - name:    dependencies
    type:    object
    default: 
      - source: '\\nirvana\temp\papower\Measurements\VeriStandAddons\slsc_eds_custom_device'
        file: 'SLSC EDS Configuration.llb'
        destination: 'Includes'
      - source: '\\nirvana\temp\papower\Measurements\VeriStandAddons\slsc_eds_custom_device'
        file: 'SLSC EDS Engine Windows.llb'
        destination: 'Includes'

    # buildOutputLocation - location where LV build outputs are stored
  - name:    buildOutputLocation
    type:    string
    default: 'Built'

    # packages - configuration for each nipkg to build
  - name:    packages
    type:    object
    default: 
      - installLocation: 'documents\National Instruments\NI VeriStand $(lvVersion)\SLSC Plugins\Modules'
        controlFileName: 'control'
        payloadLocation: 'Built'

    # archiveLocation - location to store build artifacts for archival
  - name:    archiveLocation
    type:    string
    default: '\\nirvana\temp\papower\Measurements\VeriStandAddons\imitation-cd'

    # buildSteps - list of each project, buildOperation, target, and buildSpec combination to build 
    # Note: target and buildSpec may be empty for some buildOperations
  - name:    buildSteps
    type:    object
    default:
      - projectLocation: 'Source\TestProject.lvproj'
        buildOperation: 'ExecuteAllBuildSpecs'
        target: ''
        buildSpec: ''


# --------- Call Build Templates ---------
# Note: If custom build steps are needed for a particular custom device, they can be inserted before or after existing templates below
stages:
  - stage: build
    jobs:
      - ${{ each lvVersion in parameters.lvVersions }}:
        - job:
          displayName: Build ${{ parameters.customDeviceRepoName }} for LabVIEW ${{ lvVersion.version }}
          steps:
            - template: azure-templates\pre-job-steps.yml # Configure variables, check out repos, Clear cache
              parameters:
                customDeviceRepoName:  ${{ parameters.customDeviceRepoName }}
                lvVersion:             ${{ lvVersion.version }}
                bitness:               ${{ lvVersion.bitness }} 
                archiveLocation:       ${{ parameters.archiveLocation }}
                dependencies:          ${{ parameters.dependencies }}

            - ${{ each buildStep in parameters.buildSteps }}:
              - template: azure-templates\build-op-steps.yml # config file and build specs
                parameters:
                  projectLocation: ${{ buildStep.projectLocation }}
                  buildOperation:  ${{ buildStep.buildOperation }}
                  target:          ${{ buildStep.target }}
                  buildSpec:       ${{ buildStep.buildSpec }}

            - ${{ each package in parameters.packages }}:
              - template: azure-templates\post-job-steps.yml # nipkg and archive
                parameters:
                  package:             ${{ package }}
                  buildOutputLocation: ${{ parameters.buildOutputLocation }}
                  pack:                true
trigger:
  batch: true
  branches:
    include:
      - main
      - release/*

resources:
  repositories:
    - repository: niveristand-custom-device-build-tools
      type:       github
      ref:        main
      endpoint:   ni (2)
      name:       ni/niveristand-custom-device-build-tools

  pipelines:
    - pipeline: VeristandMessageLibrary
      source:   ni.niveristand-custom-device-message-library
      trigger:  true

pool:
  name: custom-device-temp # TEMPORARY, eventually use an official build pool of custom device agents
  demands:
    - agent.os -equals Windows_NT

# --------- Set Build Parameters ---------
parameters:
    # lvVersions - each LabVIEW version and bitness combination to build
  - name:    lvVersionsToBuild
    type:    object
    default:
      - version: '2020'
        bitness: '32-bit'
      - version: '2021'
        bitness: '64-bit'
      - version: '2023'
        bitness: '64-bit'

    # releaseVersionm quarterlyReleaseVersion - release versions for output package
  - name:    releaseInfo
    type:    object
    default: 
      - releaseVersion: '23.0.0'
        quarterlyReleaseVersion: '2023 Q1'

      # dependencies - source location, file, and copy destination
  - name:    dependencies
    type:    object
    default: 
      - source: '\\daqserver\temp\papower\Measurements\VeriStandAddons\messaging_library'
        file: 'CDMessaging.lvlibp'
        destination: 'Includes'

    # buildSteps - list of each project, buildOperation, target, and buildSpec combination to build 
    # Note: target and buildSpec may be empty for some buildOperations
  - name:    buildSteps
    type:    object
    default:
      - projectLocation: 'Source\TestProject.lvproj'
        buildOperation: 'ExecuteBuildSpec'
        target: 'My Computer'
        buildSpec: 'BuildSpec'

      - projectLocation: 'Source\TestProject.lvproj'
        buildOperation: 'ExecuteBuildSpec'
        target: 'Linux x64'
        buildSpec: 'BuildSpec'

      - projectLocation: 'Source\TestProject.lvproj'
        buildOperation: 'ExecuteBuildSpec'
        target: 'Linux x64'
        buildSpec: 'LinuxOnlyBuildSpec'

    # buildOutputLocation - location where LV build outputs are stored
  - name:    buildOutputLocation
    type:    string
    default: 'Built'

    # packages - configuration for each nipkg to build
  - name:    packages
    type:    object
    default: 
      - controlFileName: 'control'
        payloadMaps:
          - payloadLocation: 'Built'
            installLocation: 'documents\National Instruments\NI VeriStand $(lvVersion)\SLSC Plugins\Modules'

    # archiveLocation - location to store build artifacts for archival
  - name:    archiveLocation
    type:    string
    default: '\\daqserver\temp\papower\Measurements\VeriStandAddons\imitation-cd'

# --------- Call Build Templates ---------
# Note: If custom build steps are needed for a particular custom device, they can be inserted before or after existing templates below
stages:
  - stage: build
    jobs:
      - ${{ each lvVersionToBuild in parameters.lvVersionsToBuild }}:
        - job: Job
          displayName: Build for LabVIEW ${{ lvVersionToBuild.version }}
          steps:
            - template: azure-templates\pre-job-steps.yml # Configure variables, check out repos, Clear cache
              parameters:
                lvVersionToBuild: ${{ lvVersionToBuild }}
                releaseInfo:      ${{ parameters.releaseInfo }}

            - ${{ each buildStep in parameters.buildSteps }}:
              - template: azure-templates\build-op-steps.yml # config file and build specs
                parameters:
                  buildStep:    ${{ buildStep }}
                  dependencies: ${{ parameters.dependencies }}


            - template: azure-templates\post-job-steps.yml # nipkg and archive
              parameters:
                packages:            ${{ parameters.packages }}
                buildOutputLocation: ${{ parameters.buildOutputLocation }}
                archiveLocation:     ${{ parameters.archiveLocation }}
                pack:                true

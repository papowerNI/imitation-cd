parameters:
  - name: customDeviceRepoName
    type: string
  - name: lvVersion
    type: string
  - name: bitness
    type: string
  - name: buildTools
    type: string
    default: niveristand-custom-device-build-tools
  - name: archiveLocation
    type: string
  - name: dependencies
    type: object
    default:
      - source: '\\nirvana\temp\papower\Measurements\VeriStandAddons\slsc-eds-custom-device'
        file: 'Main.vi'
        destination: 'Includes'

steps:
###########  Configure Job-wide Variables  ###########
  # --- lvPath, architecture ---
  - ${{ if eq( parameters.bitness, '32-bit' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvPath]C:\Program Files (x86)\National Instruments\LabVIEW ${{ parameters.lvVersion }}"
        Write-Host "##vso[task.setvariable variable=architecture]x86"
      displayName: Use 32-bit LabVIEW

  - ${{ if eq( parameters.bitness, '64-bit' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvPath]C:\Program Files\National Instruments\LabVIEW ${{ parameters.lvVersion }}"
        Write-Host "##vso[task.setvariable variable=architecture]x64"
      displayName: Use 64-bit LabVIEW

  # --- lvConfigVersion (.NET Assembly Version) ---
  - ${{ if eq( parameters.lvVersion, '2020' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvConfigVersion]8.0.0.0"
        Write-Host '##vso[task.setvariable variable=shortLvVersion]20'
        Write-Host '##vso[task.setvariable variable=releaseVersion]20.0.0'
        Write-Host '##vso[task.setvariable variable=quarterlyReleaseVersion]$(releaseVersion)'
      displayName: Use .NET Assembly 8.0.0.0

  - ${{ if eq( parameters.lvVersion, '2021' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvConfigVersion]9.0.0.0"
        Write-Host '##vso[task.setvariable variable=shortLvVersion]21'
        Write-Host '##vso[task.setvariable variable=releaseVersion]21.0.0'
        Write-Host '##vso[task.setvariable variable=quarterlyReleaseVersion]$(releaseVersion)'
      displayName: Use .NET Assembly 9.0.0.0

  - ${{ if eq( parameters.lvVersion, '2023' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvConfigVersion]10.0.0.0"
        Write-Host '##vso[task.setvariable variable=shortLvVersion]23'
        Write-Host '##vso[task.setvariable variable=releaseVersion]23.0.0'
        Write-Host '##vso[task.setvariable variable=quarterlyReleaseVersion]2023 Q1'
      displayName: Use .NET Assembly 10.0.0.0

  # --- buildTools, lvVersion, lvCLICall ---
  - powershell: |
      Write-Host '##vso[task.setvariable variable=buildTools]${{ parameters.buildTools }}'
      Write-Host '##vso[task.setvariable variable=lvVersion]${{ parameters.lvVersion }}'
      Write-Host '##vso[task.setvariable variable=customDeviceRepoName]${{ parameters.customDeviceRepoName }}'
      Write-Host '##vso[task.setvariable variable=extendedArchiveLocation]${{ parameters.archiveLocation }}\NI\export\$(Build.SourceBranchName)\'
      Write-Host '##vso[task.setvariable variable=lvCLICall]LabVIEWCLI -PortNumber 3363 -LabVIEWPath "$(lvPath)\LabVIEW.exe" -AdditionalOperationDirectory "%cd%\${{ parameters.buildTools }}\lv\operations"'
    displayName: Define Job-wide Variables

###########  Checkout Necessary Repos  ###########
  - checkout: self
    displayName: Check out ${{ parameters.customDeviceRepoName }} repository

  - checkout: ${{ parameters.buildTools }}
    displayName: Check out NI VS Custom Device Build Tools repository

###########  Pull Dependencies in from latest build locations  ###########
  - ${{ each dependency in parameters.dependencies }}:
    - powershell: |
        $branch = 'main'
        If (Test-Path -Path '${{ dependency.source }}\NI\export\$(Build.SourceBranchName)*\$(lvVersion)\$(architecture)') 
        {
          $branch = $(Build.SourceBranchName)
        }
        $dependencyFilePath = Get-ChildItem `
          -Path '${{ dependency.source }}\NI\export\$branch\*\$(lvVersion)\$(architecture)\*' `
          -Recurse `
          -Include '*${{ dependency.file }}' `
          | Sort {$_.LastWriteTime} `
          | select -last 1
        Write-Output $dependencyFilePath
        Write-Output '${{ dependency.file }}'
        Write-Output '${{ dependency.source }}\NI\export\$branch\'
        New-Item `
          -Path '$(customDeviceRepoName)\${{ dependency.destination }}' `
          -ItemType 'Directory' `
          -Verbose
        Copy-Item `
          -Path $dependencyFilePath `
          -Destination '$(customDeviceRepoName)\${{ dependency.destination }}\' `
          -Recurse `
          -Verbose
      displayName: Copy ${{ dependency.file }} to ${{ dependency.destination }}

###########  Clear Compile Cache  ###########
  - script: $(lvCLICall) -OperationName "SecureRunVI" -VIPath "%cd%\$(buildTools)\lv\operations\Utilities\ClearCache.vi" -LogFilePath "%cd%\$(customDeviceRepoName)\lvClearCache.log"
    displayName: Clear compiled cache for LabVIEW ${{ parameters.lvVersion }}
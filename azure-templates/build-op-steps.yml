# File: build-op-steps.yaml
##### Steps Template for each Build Operation #####

###########  Input Parameters for Template  ###########
parameters:
  - name: projectLocations
    type: object
  - name: buildOperation
    type: string
  - name: customDevice
    type: string
  - name: lvVersion
    type: string

steps:
###########  Iterate through Project Locations  ###########
  - ${{ each projectLocation in parameters.projectLocations }}:
      # Configure build variables: lvConfigFilePath, lvCLICall
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvConfigFilePath]${{ parameters.customDevice }}\${{ projectLocation }}.config"
      displayName: determine config file path # run once per project

      # Lvproj.config File Placement
    - script: copy "${{ variables.buildTools }}\resources\LabVIEW.exe.config" "$(lvConfigFilePath)"
      displayName: Place lvproj.config next to Project # run once per project
    - powershell: (Get-Content -Path '$(lvConfigFilePath)') -replace '2016.0.0.0', '$(lvConfigVersion)' | Set-Content -Path '$(lvConfigFilePath)'
      displayName: Update lvproj.config to reference correct .NET Assembly version # run once per project

      # Build all LabVIEW Build Specs
    - script: $(lvCLICall) -OperationName "ExecuteAllBuildSpecs" -ProjectPath "%cd%\${{ parameters.customDevice }}\${{ projectLocation }}" -LogFilePath "%cd%\${{ parameters.customDevice }}\lvBuildSpecs.log"
      displayName: Build All Build Specs in ${{ projectLocation }} for LabVIEW ${{ parameters.lvVersion }} # run once per build spec
    - script: taskkill /im labview.exe /f
      displayName: Close LabVIEW ${{ parameters.lvVersion }} Process # run once per build spec
      condition: always() # always close LabVIEW, even if previous step fails



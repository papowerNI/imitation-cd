# File: build-op-steps.yaml
##### Steps Template for each Build Operation #####

###########  Input Parameters for Template  ###########
parameters:
  - name: projectLocation
    type: string
  - name: buildOperation
    type: string
  - name: customDevice
    type: string
  - name: lvVersion
    type: string

steps:
###########  Iterate through Project Locations  ###########
      # Check if lvproj config files placed for this project, if not, place the file
    - powershell: |
        $fileExists = Test-Path -Path "${{ parameters.customDevice }}\${{ projectLocation }}.config"
        Write-Host "##vso[task.setvariable variable=configFileExists]$fileExists"
    - ${{ eq(configFileExists, False)}}:
        # Configure build variables: lvConfigFilePath, lvCLICall
      - powershell: |
          Write-Host "##vso[task.setvariable variable=lvConfigFilePath]${{ parameters.customDevice }}\${{ projectLocation }}.config"
        displayName: determine config file path

        # Lvproj.config File Placement
      - script: copy "$(buildTools)\resources\LabVIEW.exe.config" "$(lvConfigFilePath)"
        displayName: Place lvproj.config next to Project
      - powershell: (Get-Content -Path '$(lvConfigFilePath)') -replace '2016.0.0.0', '$(lvConfigVersion)' | Set-Content -Path '$(lvConfigFilePath)'
        displayName: Update lvproj.config to reference correct .NET Assembly version

      # Build all LabVIEW Build Specs
    - script: $(lvCLICall) -OperationName $(buildOperation) -ProjectPath "%cd%\${{ parameters.customDevice }}\${{ projectLocation }}" -LogFilePath "%cd%\${{ parameters.customDevice }}\lvBuildSpecs.log"
      displayName: Build All Build Specs in ${{ projectLocation }} for LabVIEW ${{ parameters.lvVersion }}
    - script: taskkill /im labview.exe /f
      displayName: Close LabVIEW ${{ parameters.lvVersion }} Process
      condition: always() # always close LabVIEW, even if previous step fails



# File: build-steps.yaml

###########  Input Parameters for Template  ###########
parameters:
  - name: buildTools
    type: string
  - name: projectLocations
    type: object
  - name: customDevice
    type: string
  - name: lvVersion
    type: string
  - name: pack
    type: boolean

steps:
###########  Configure Variables  ###########
  # --- lvConfigVersion (.NET Assembly Version), lvPath ---
  - ${{ if eq( parameters.lvVersion, '2020' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvPath]C:\Program Files (x86)\National Instruments\LabVIEW ${{ parameters.lvVersion }}"
        Write-Host "##vso[task.setvariable variable=lvConfigVersion]8.0.0.0"
      displayName: Use .NET Assembly 8.0.0.0 & 32-bit
  - ${{ if eq( parameters.lvVersion, '2021' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvPath]C:\Program Files\National Instruments\LabVIEW ${{ parameters.lvVersion }}"
        Write-Host "##vso[task.setvariable variable=lvConfigVersion]9.0.0.0"
      displayName: Use .NET Assembly 9.0.0.0 & 64-bit
  - ${{ if eq( parameters.lvVersion, '2023' )}}:
    - powershell: |
        Write-Host "##vso[task.setvariable variable=lvPath]C:\Program Files\National Instruments\LabVIEW ${{ parameters.lvVersion }}"
        Write-Host "##vso[task.setvariable variable=lvConfigVersion]10.0.0.0"
      displayName: Use .NET Assembly 10.0.0.0 & 64-bit
  # --- lvConfigFilePath, lvCLICall ---
  - powershell: | 
      Write-Host "##vso[task.setvariable variable=lvConfigFilePath]${{ parameters.customDevice }}\${{ parameters.projectLocations }}.config"
      Write-Host '##vso[task.setvariable variable=lvCLICall]LabVIEWCLI -PortNumber 3363 -LabVIEWPath "$(lvPath)\LabVIEW.exe" -AdditionalOperationDirectory "%cd%\${{ parameters.buildTools }}\lv\operations"'
    displayName: Store reused strings as variables

###########  Checkout Necessary Repos  ###########
  - checkout: self
    displayName: Check out ${{ parameters.customDevice }} repository
  - checkout: ${{ parameters.buildTools }}
    displayName: Check out NI VS Custom Device Build Tools repository

###########  Lvproj.config File Placement  ###########
  - script: copy "${{ parameters.buildTools }}\resources\LabVIEW.exe.config" "$(lvConfigFilePath)"
    displayName: Place lvproj.config next to Project
  - powershell: (Get-Content -Path '$(lvConfigFilePath)') -replace '2016.0.0.0', '$(lvConfigVersion)' | Set-Content -Path '$(lvConfigFilePath)'
    displayName: Update lvproj.config to reference correct .NET Assembly version

###########  Build all LabVIEW Build Specs  ###########
  - script: $(lvCLICall) -OperationName "SecureRunVI" -VIPath "%cd%\${{ parameters.buildTools }}\lv\operations\Utilities\ClearCache.vi" -LogFilePath "%cd%\${{ parameters.customDevice }}\lvClearCache.log"
    displayName: Clear compiled cache for LabVIEW ${{ parameters.lvVersion }}
  - script: $(lvCLICall) -OperationName "ExecuteAllBuildSpecs" -ProjectPath "%cd%\${{ parameters.customDevice }}\${{ parameters.projectLocations }}" -LogFilePath "%cd%\${{ parameters.customDevice }}\lvBuildSpecs.log"
    displayName: Build All Build Specs in ${{ parameters.projectLocations }} for LabVIEW ${{ parameters.lvVersion }}
  - script: taskkill /im labview.exe /f
    displayName: Close LabVIEW ${{ parameters.lvVersion }} Process
    condition: always() # always close LabVIEW, even if previous step fails

###########  Archive  ###########
  - ${{ if eq( parameters.pack, true )}}:
    - powershell: rm -r "nipkg"; mkdir "nipkg"; cp -R "${{ parameters.customDevice }}\Built\*" "nipkg\data\documents\National Instruments\NI VeriStand 2020\Custom Devices\National Instruments"
      displayName: Generate nipkg File structure (INCOMPLETE)
    - script: echo "this is incomplete"
      displayName: Pack nipkg (INCOMPLETE)
  - powershell: cp -R -force "${{ parameters.customDevice }}\Built\*" "\\nirvana\temp\papower\LabVIEW ${{ parameters.lvVersion }}"
    displayName: Copying Built Files to \\nirvana Archive
